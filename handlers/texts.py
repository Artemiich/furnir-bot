import sqlite3from data.loader import botfrom telebot import TeleBot, typesadmin_chat_id = Noneimport telebotfrom telebot import typesimport sqlite3from data.loader import botfrom telebot import TeleBot, typesadmin_chat_id = 3972564items = [    ("Ответная планка (Накладка) 153/155", "шт", 4508),    ("Петля ПВХ 75", "шт", 5502),    ("Петля ПВХ 100", "шт", 6602),    ("Петля Алдокс", "шт", 6000),    ("Петля Алдокс 3", "шт", 5103),    ("Петля Дверная балкон", "шт", 25000),    ("Ручка дверная 'Д'", "шт", 4900),    ("Ручка дверная 28", "шт", 25000),    ("Ручка дверная Фортуна", "шт", 50000),    ("Ручка дверная Фортуна мини", "шт", 35000),    ("Ручка дверная ЛЮКС до 50см", "шт", 70000),    ("Ручка дверная ЛЮКС (TUR)", "шт", 45000),    ("Ручка оконная ДЕЛЬФИН", "шт", 15000),    ("Ручка оконная ПВХ", "шт", 7705),    ("Шпингалет внутренний", "шт", 7498),    ("Защелка Чит чит", "шт", 5500),    ("2330 Ножка", "шт", 148350),    ("2330 Труба (за 1м)", "шт", 57017),    ("Клипсы под стеклопакет (500шт)", "пачка", 25921),    ("Фиксатор пим Алдокс - 'шок' (200шт)", "шт", 21620),    ("Соединитель 151 - 'ёлка'", "шт", 4508),    ("Соединитель 155 - 'ёлка'", "шт", 5497),    ("Соединитель АХТ - ТЕРМО", "шт", 16000),    ("ПВХ Зацеп 5200 / 6000", "шт", 1748),    ("ПВХ Соединитель 5200 / 6000", "шт", 2714)]user_cart = {}@bot.message_handler(commands=['start'])def send_welcome(message):    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)    markup.add(types.KeyboardButton("Товары"), types.KeyboardButton("Адрес"), types.KeyboardButton("Контакты"))    bot.send_message(message.chat.id, "Добро пожаловать. Выберите действие:", reply_markup=markup)@bot.message_handler(func=lambda message: message.text == "Товары")def show_items(message):    kb = types.InlineKeyboardMarkup(row_width=1)    for item in items:        button = types.InlineKeyboardButton(text=f"{item[0]} ({item[1]})", callback_data=item[0])        kb.add(button)    bot.send_message(message.chat.id, "Выберите товар:", reply_markup=kb)@bot.callback_query_handler(func=lambda call: True)def handle_item_selection(call):    selected_item = call.data    bot.send_message(call.message.chat.id, f"Вы выбрали: {selected_item}. Введите количество:")    bot.register_next_step_handler(call.message, lambda message: process_quantity(message, selected_item))def process_quantity(message, selected_item):    try:        quantity = int(message.text)        user_id = message.from_user.id        if user_id not in user_cart:            user_cart[user_id] = {}        if selected_item in user_cart[user_id]:            user_cart[user_id][selected_item] += quantity        else:            user_cart[user_id][selected_item] = quantity        bot.send_message(message.chat.id, f"Добавлено {quantity} шт. {selected_item} в корзину.")        ask_continue_or_finish(message)    except ValueError:        bot.send_message(message.chat.id, "Пожалуйста, введите числовое значение.")        bot.register_next_step_handler(message, lambda msg: process_quantity(msg, selected_item))def ask_continue_or_finish(message):    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)    markup.add(types.KeyboardButton("Продолжить выбор"), types.KeyboardButton("Завершить выбор"))    bot.send_message(message.chat.id, "Хотите продолжить выбор товаров или завершить?", reply_markup=markup)    bot.register_next_step_handler(message, process_continue_or_finish)def process_continue_or_finish(message):    if message.text == "Продолжить выбор":        show_items(message)    elif message.text == "Завершить выбор":        request_phone(message)    else:        bot.send_message(message.chat.id, "Пожалуйста, выберите 'Продолжить выбор' или 'Завершить выбор'.")        ask_continue_or_finish(message)def request_phone(message):    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)    phone_button = types.KeyboardButton(text="Отправить номер", request_contact=True)    markup.add(phone_button)    bot.send_message(message.chat.id, "Отправьте ваш номер телефона:", reply_markup=markup)    bot.register_next_step_handler(message, process_contact)def process_contact(message):    if message.contact is not None:        user_id = message.from_user.id        user_cart[user_id]['phone'] = message.contact.phone_number        request_name(message)def request_name(message):    bot.send_message(message.chat.id, "Введите ваше имя:")    bot.register_next_step_handler(message, process_name)def process_name(message):    user_id = message.from_user.id    user_cart[user_id]['name'] = message.text    send_order_to_admin(user_id)    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)    markup.add(types.KeyboardButton("Сайт"), types.KeyboardButton("Контакты"), types.KeyboardButton("Адрес"),               types.KeyboardButton("Товары"))    bot.send_message(message.chat.id, "Ваши данные отправлены. Что вы хотите узнать дальше?", reply_markup=markup)def send_order_to_admin(user_id):    global admin_chat_id    if admin_chat_id:        user_info = user_cart[user_id]        cart_summary = f"Заказ от пользователя {user_info['name']}:\n"        cart_summary += f"Телефон: {user_info['phone']}\n"        cart_summary += "Товары:\n"        total_sum = 0        for item_name, qty in user_info.items():            if item_name not in ['phone', 'name']:                item_price = next(item[2] for item in items if item[0] == item_name)                cart_summary += f"{item_name}\nКоличество: {qty} шт\nЦена: {item_price} сум\n\n"                total_sum += qty * item_price        cart_summary += f"Итого: {total_sum} сум"        try:            bot.send_message(admin_chat_id, cart_summary)        except Exception as e:            print(f"Ошибка при отправке сообщения: {e}")    else:        bot.send_message(user_id, "Администратор не назначен. Пожалуйста, свяжитесь с поддержкой.")@bot.message_handler(func=lambda message: message.text in ["Сайт", "Контакты", "Адрес"])def handle_info_buttons(message):    if message.text == "Сайт":        bot.send_message(message.chat.id, "Наш сайт: https://example.com")    elif message.text == "Контакты":        bot.send_message(message.chat.id, "Связаться с нами: +123456789")    elif message.text == "Адрес":        bot.send_message(message.chat.id, "Наш адрес: Ул. Примерная, 123")bot.polling(none_stop=True)